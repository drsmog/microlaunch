import { Text, Box, Button, Container, Flex, Image } from "@chakra-ui/react";
import { usePageState } from "@src/shared/state";
import { useWallet } from "@src/shared/walletV1";
import Head from "next/head";
import { useEffect, useState } from "react";
import { useApi } from "@src/shared/api";
import Avatar from "@src/shared/Avatar";
import frontUtils from "@src/shared/front-utils";
// import ReactProgressMeter from "react-progress-meter";

export default function Home() {
  const wallet = useWallet();
  const [project, setProject] = useState();
  const [followersData, setFollowersData] = useState();
  const [state, methods] = usePageState();
  const api = useApi();

  const handleFollowClick = async () => {
    if (!state.currentAddress) {
      methods.openConnectToWallet();
    }
    // const res = await wallet.followProfile();
    const res = await wallet.followProfileForFree();
    //ask for connect
    //effect -> call method
  };
  useEffect(() => {
    const fetchData = async () => {
      let response = await api.call("get", "/api/project");
      setProject(response.project);
      response = await api.call("get", "/api/followers");
      setFollowersData(response.followers);
    };
    fetchData();
  }, []);

  useEffect(() => {
    console.log(project, followersData);
  }, [project, followersData]);

  return (
    <Box>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Container maxW={"7xl"}>
        <Box ml="20px" mr="20px" p="20px" pl="60px" pr="60px">
          {/* <ReactProgressMeter
            currentProgress={10}
            showPercent={true}
            show={true}
            color="red"
            width="100%"
          /> */}
        </Box>
        <Flex flexWrap={"wrap"}>
          <Flex w="70%">
            {project && (
              <Flex flexDirection={"column"}>
                <Image
                  src={`https://ipfs.io/ipfs/${project.image.split("//")[1]}`}
                  alt="project image"
                />
                <Text>{project.project.name}</Text>
                <Text>{project.project.description}</Text>
                <Text>{project.project.followerGoal}</Text>
                <Text>{project.project.fundingGoal}</Text>
                <Button onClick={handleFollowClick}>Follow</Button>
              </Flex>
            )}
          </Flex>
          <Flex w="30%">
            {followersData && (
              <Flex flexDirection={"column"}>
                {followersData.followers.items.map((follower, index) => {
                  return (
                    <Box key={`follower-${follower.wallet.address}-index`}>
                      <Avatar
                        address={follower.wallet.address}
                        w="64px"
                        h="64px"
                        minW="64px"
                        minH="64px"
                      />

                      {frontUtils.get6DigitOfAccount(follower.wallet.address)}
                    </Box>
                  );
                })}

                <Button onClick={handleFollowClick}>Follow</Button>
              </Flex>
            )}
          </Flex>
        </Flex>
      </Container>
    </Box>
  );
}
